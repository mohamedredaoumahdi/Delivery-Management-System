"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const vendorController_1 = require("@/controllers/vendorController");
const auth_1 = require("@/middleware/auth");
const requireRole_1 = require("@/middleware/requireRole");
const validation_1 = require("@/middleware/validation");
const vendorValidators_1 = require("@/validators/vendorValidators");
const upload_1 = require("@/middleware/upload");
const router = (0, express_1.Router)();
const vendorController = new vendorController_1.VendorController();
router.use(auth_1.auth);
router.use((0, requireRole_1.requireRole)(['VENDOR']));
router.get('/shop', vendorController.getVendorShop);
router.post('/shop', vendorController.createShop);
router.put('/shop', (0, validation_1.validateRequest)(vendorValidators_1.updateShopSchema), vendorController.updateShop);
router.patch('/shop/status', vendorController.toggleShopStatus);
router.get('/products', vendorController.getVendorProducts);
router.post('/products', upload_1.upload.array('images', 5), (0, validation_1.validateRequest)(vendorValidators_1.createProductSchema), vendorController.createProduct);
router.put('/products/:id', upload_1.upload.array('images', 5), vendorController.updateProduct);
router.delete('/products/:id', vendorController.deleteProduct);
router.get('/orders', vendorController.getVendorOrders);
router.get('/orders/stats', vendorController.getOrderStats);
router.patch('/orders/:id/status', vendorController.updateOrderStatus);
router.patch('/orders/:id/cancellation-request', vendorController.handleCancellationRequest);
router.post('/orders/:id/cancel', vendorController.cancelOrder);
router.get('/analytics/sales', vendorController.getSalesAnalytics);
router.get('/analytics/products', vendorController.getProductAnalytics);
exports.default = router;
//# sourceMappingURL=vendor.js.map